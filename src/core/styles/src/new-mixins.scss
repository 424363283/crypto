@mixin nui-base-sizing($height, $padding, $font-size) {
  padding: 0 $padding;
  font-size: $font-size;
  height: $height;
  min-height: $height;
  line-height: $height;
}
@mixin nui-content-group-sizing($selectors, $height, $padding, $font-size) {
  $child-padding: $padding * 3;

  #{$selectors} {
    @include nui-base-sizing($height, $padding, $font-size);

    @if ($selectors == '.nui-input-file-content') {
      &:not(:nth-child(2)) {
        padding-left: $child-padding;
      }
    } @else {
      &:not(:first-child) {
        // padding-left: $child-padding;
      }
    }

    // &:not(:last-child) {
    //   padding-right: $child-padding;
    // }
  }

  > .nui-addon,
  > .nui-button,
  > .nui-spinner,
  > .nui-icon,
  > .nui-tag {
    &:first-child:not(input) {
      margin-left: $padding;
    }

    &:last-child {
      margin-right: $padding;
    }
  }

  > .nui-addon {
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    gap: 16px;
  }
  > .nui-button {
    @include nui-base-sizing(
      floor(math.div($height, 1.4)),
      floor($padding * 0.5),
      floor(math.div($font-size, 1.2))
    );
  }
}
@mixin nui-content-group-children($top-position: 50%){
  > .nui-addon,
  > .nui-button,
  > .nui-spinner,
  > .nui-icon,
  > .nui-tag {
    // position: absolute;
    // top: $top-position;
    // transform: translateY(-$top-position);
    // margin: 0;
    // z-index: 1;

    &:first-child {
      left:0;
    }

    &:last-child {
      right:0;
    }
  }
}
@mixin nui-input-style($selector, $border-color, $border-color-focus){
  @if $selector == null  {
      &:hover {
        box-shadow: 0 0 0 1px $border-color;
      }
  
      &:focus {
        box-shadow: 0 0 0 1px $border-color-focus;
      }

    } @else {
      #{$selector} {
        &:hover {
          box-shadow: 0 0 0 1px $border-color;
        }
  
        &:focus {
          box-shadow: 0 0 0 1px $border-color-focus;
        }
      }
    }
}
